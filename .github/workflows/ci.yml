name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]
    workflow_dispatch:

jobs:
    test:
        name: Test on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                include:
                    - os: ubuntu-latest
                      install-compiler: sudo apt-get update && sudo apt-get install -y gcc build-essential
                    - os: macos-latest
                      install-compiler: echo "Clang already installed"
                    - os: windows-latest
                      install-compiler: echo "MSVC via GitHub Actions runner"

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: Install dependencies
              run: bun install

            - name: Install C compiler
              run: ${{ matrix.install-compiler }}
              shell: bash

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.x'

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: 'stable'

            - name: Verify Python installation
              run: python --version || python3 --version

            - name: Verify Go installation
              run: go version

            - name: Build TestMe
              run: bun run build

            - name: Verify binary exists (Unix)
              if: runner.os != 'Windows'
              run: |
                  dist/tm --version

            - name: Verify binary exists (Windows)
              if: runner.os == 'Windows'
              run: |
                  dist\tm.exe --version

            - name: Run test suite (Unix)
              if: runner.os != 'Windows'
              run: |
                  ../dist/tm test

            - name: Run test suite (Windows)
              if: runner.os == 'Windows'
              run: |
                  ..\dist\tm.exe test

            - name: Upload test results
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: test-results-${{ matrix.os }}
                  path: test/.testme/
                  retention-days: 7

    lint:
        name: Lint and Format Check
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: Install dependencies
              run: bun install

            - name: Check formatting
              run: bun run format --check || echo "Format check skipped (no format script)"
              continue-on-error: true

    build-packages:
        name: Build Distribution Packages
        runs-on: ubuntu-latest
        needs: [test, lint]
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: Install dependencies
              run: bun install

            - name: Build binary
              run: bun run build

            - name: Create package
              run: npm pack

            - name: Upload package
              uses: actions/upload-artifact@v4
              with:
                  name: npm-package
                  path: '*.tgz'
                  retention-days: 30
